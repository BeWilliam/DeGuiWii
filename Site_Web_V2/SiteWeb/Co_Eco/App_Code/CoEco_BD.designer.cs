#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CoEco_BD")]
public partial class CoEco_BDDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Définitions de méthodes d'extensibilité
  partial void OnCreated();
  partial void InsertT_CategoriePro(T_CategoriePro instance);
  partial void UpdateT_CategoriePro(T_CategoriePro instance);
  partial void DeleteT_CategoriePro(T_CategoriePro instance);
  partial void InsertT_TypeDepense(T_TypeDepense instance);
  partial void UpdateT_TypeDepense(T_TypeDepense instance);
  partial void DeleteT_TypeDepense(T_TypeDepense instance);
  partial void InsertT_Depense(T_Depense instance);
  partial void UpdateT_Depense(T_Depense instance);
  partial void DeleteT_Depense(T_Depense instance);
  partial void InsertT_EmployeProjet(T_EmployeProjet instance);
  partial void UpdateT_EmployeProjet(T_EmployeProjet instance);
  partial void DeleteT_EmployeProjet(T_EmployeProjet instance);
  partial void InsertT_FeuilleDeTemps(T_FeuilleDeTemps instance);
  partial void UpdateT_FeuilleDeTemps(T_FeuilleDeTemps instance);
  partial void DeleteT_FeuilleDeTemps(T_FeuilleDeTemps instance);
  partial void InsertT_FonctionEmploye(T_FonctionEmploye instance);
  partial void UpdateT_FonctionEmploye(T_FonctionEmploye instance);
  partial void DeleteT_FonctionEmploye(T_FonctionEmploye instance);
  partial void InsertT_Kilometrage(T_Kilometrage instance);
  partial void UpdateT_Kilometrage(T_Kilometrage instance);
  partial void DeleteT_Kilometrage(T_Kilometrage instance);
  partial void InsertT_Projet(T_Projet instance);
  partial void UpdateT_Projet(T_Projet instance);
  partial void DeleteT_Projet(T_Projet instance);
  partial void InsertT_StatusCategorie(T_StatusCategorie instance);
  partial void UpdateT_StatusCategorie(T_StatusCategorie instance);
  partial void DeleteT_StatusCategorie(T_StatusCategorie instance);
  partial void InsertT_StatusEmploye(T_StatusEmploye instance);
  partial void UpdateT_StatusEmploye(T_StatusEmploye instance);
  partial void DeleteT_StatusEmploye(T_StatusEmploye instance);
  partial void InsertT_StatusProjet(T_StatusProjet instance);
  partial void UpdateT_StatusProjet(T_StatusProjet instance);
  partial void DeleteT_StatusProjet(T_StatusProjet instance);
  partial void InsertT_TauxKilo(T_TauxKilo instance);
  partial void UpdateT_TauxKilo(T_TauxKilo instance);
  partial void DeleteT_TauxKilo(T_TauxKilo instance);
  partial void InsertT_Employe(T_Employe instance);
  partial void UpdateT_Employe(T_Employe instance);
  partial void DeleteT_Employe(T_Employe instance);
  #endregion
	
	public CoEco_BDDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["CoEco_BDConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public CoEco_BDDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoEco_BDDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoEco_BDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public CoEco_BDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<T_CategoriePro> T_CategoriePro
	{
		get
		{
			return this.GetTable<T_CategoriePro>();
		}
	}
	
	public System.Data.Linq.Table<T_TypeDepense> T_TypeDepense
	{
		get
		{
			return this.GetTable<T_TypeDepense>();
		}
	}
	
	public System.Data.Linq.Table<T_Depense> T_Depense
	{
		get
		{
			return this.GetTable<T_Depense>();
		}
	}
	
	public System.Data.Linq.Table<T_EmployeProjet> T_EmployeProjet
	{
		get
		{
			return this.GetTable<T_EmployeProjet>();
		}
	}
	
	public System.Data.Linq.Table<T_FeuilleDeTemps> T_FeuilleDeTemps
	{
		get
		{
			return this.GetTable<T_FeuilleDeTemps>();
		}
	}
	
	public System.Data.Linq.Table<T_FonctionEmploye> T_FonctionEmploye
	{
		get
		{
			return this.GetTable<T_FonctionEmploye>();
		}
	}
	
	public System.Data.Linq.Table<T_Kilometrage> T_Kilometrage
	{
		get
		{
			return this.GetTable<T_Kilometrage>();
		}
	}
	
	public System.Data.Linq.Table<T_Projet> T_Projet
	{
		get
		{
			return this.GetTable<T_Projet>();
		}
	}
	
	public System.Data.Linq.Table<T_StatusCategorie> T_StatusCategorie
	{
		get
		{
			return this.GetTable<T_StatusCategorie>();
		}
	}
	
	public System.Data.Linq.Table<T_StatusEmploye> T_StatusEmploye
	{
		get
		{
			return this.GetTable<T_StatusEmploye>();
		}
	}
	
	public System.Data.Linq.Table<T_StatusProjet> T_StatusProjet
	{
		get
		{
			return this.GetTable<T_StatusProjet>();
		}
	}
	
	public System.Data.Linq.Table<T_TauxKilo> T_TauxKilo
	{
		get
		{
			return this.GetTable<T_TauxKilo>();
		}
	}
	
	public System.Data.Linq.Table<T_Employe> T_Employe
	{
		get
		{
			return this.GetTable<T_Employe>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_ChangerDateFinProjet")]
	public int PS_ChangerDateFinProjet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idProjet, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> ddateFin)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProjet, ddateFin);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_GetMaxIdProjet")]
	public int PS_GetMaxIdProjet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> idProjet)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProjet);
		idProjet = ((System.Nullable<int>)(result.GetParameterValue(0)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_ChangerEtatCategorie")]
	public int PS_ChangerEtatCategorie([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCategorie, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idStatusCat)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCategorie, idStatusCat);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_ChangerEtatProjet")]
	public int PS_ChangerEtatProjet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idProjet, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idStatus)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProjet, idStatus);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_ChangerStatusEmp")]
	public int PS_ChangerStatusEmp([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idEmploye, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idStatus)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idEmploye, idStatus);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_ChangerTauxKilo")]
	public int PS_ChangerTauxKilo([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Real")] System.Nullable<float> newValue)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), newValue);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_DepenseProjet")]
	public int PS_DepenseProjet([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idProjet, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallMoney")] ref System.Nullable<decimal> total)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProjet, total);
		total = ((System.Nullable<decimal>)(result.GetParameterValue(1)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_GetMaxIdCategorie")]
	public int PS_GetMaxIdCategorie([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> idCat)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCat);
		idCat = ((System.Nullable<int>)(result.GetParameterValue(0)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_GetMaxIdEmpolye")]
	public int PS_GetMaxIdEmpolye([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> idProjet)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProjet);
		idProjet = ((System.Nullable<int>)(result.GetParameterValue(0)));
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PS_GetMaxIdFeuilleTemps")]
	public int PS_GetMaxIdFeuilleTemps([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> idFeuilleTemps)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idFeuilleTemps);
		idFeuilleTemps = ((System.Nullable<int>)(result.GetParameterValue(0)));
		return ((int)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_CategoriePro")]
public partial class T_CategoriePro : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idCategorie;
	
	private string _descript;
	
	private int _idProjet;
	
	private int _idStatusCat;
	
	private EntitySet<T_Depense> _T_Depense;
	
	private EntitySet<T_FeuilleDeTemps> _T_FeuilleDeTemps;
	
	private EntitySet<T_Kilometrage> _T_Kilometrage;
	
	private EntityRef<T_Projet> _T_Projet;
	
	private EntityRef<T_StatusCategorie> _T_StatusCategorie;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCategorieChanging(int value);
    partial void OnidCategorieChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    partial void OnidProjetChanging(int value);
    partial void OnidProjetChanged();
    partial void OnidStatusCatChanging(int value);
    partial void OnidStatusCatChanged();
    #endregion
	
	public T_CategoriePro()
	{
		this._T_Depense = new EntitySet<T_Depense>(new Action<T_Depense>(this.attach_T_Depense), new Action<T_Depense>(this.detach_T_Depense));
		this._T_FeuilleDeTemps = new EntitySet<T_FeuilleDeTemps>(new Action<T_FeuilleDeTemps>(this.attach_T_FeuilleDeTemps), new Action<T_FeuilleDeTemps>(this.detach_T_FeuilleDeTemps));
		this._T_Kilometrage = new EntitySet<T_Kilometrage>(new Action<T_Kilometrage>(this.attach_T_Kilometrage), new Action<T_Kilometrage>(this.detach_T_Kilometrage));
		this._T_Projet = default(EntityRef<T_Projet>);
		this._T_StatusCategorie = default(EntityRef<T_StatusCategorie>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategorie", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int idCategorie
	{
		get
		{
			return this._idCategorie;
		}
		set
		{
			if ((this._idCategorie != value))
			{
				this.OnidCategorieChanging(value);
				this.SendPropertyChanging();
				this._idCategorie = value;
				this.SendPropertyChanged("idCategorie");
				this.OnidCategorieChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProjet", DbType="Int NOT NULL")]
	public int idProjet
	{
		get
		{
			return this._idProjet;
		}
		set
		{
			if ((this._idProjet != value))
			{
				if (this._T_Projet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidProjetChanging(value);
				this.SendPropertyChanging();
				this._idProjet = value;
				this.SendPropertyChanged("idProjet");
				this.OnidProjetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStatusCat", DbType="Int NOT NULL")]
	public int idStatusCat
	{
		get
		{
			return this._idStatusCat;
		}
		set
		{
			if ((this._idStatusCat != value))
			{
				if (this._T_StatusCategorie.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidStatusCatChanging(value);
				this.SendPropertyChanging();
				this._idStatusCat = value;
				this.SendPropertyChanged("idStatusCat");
				this.OnidStatusCatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CategoriePro_T_Depense", Storage="_T_Depense", ThisKey="idCategorie", OtherKey="idCategorie")]
	public EntitySet<T_Depense> T_Depense
	{
		get
		{
			return this._T_Depense;
		}
		set
		{
			this._T_Depense.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CategoriePro_T_FeuilleDeTemps", Storage="_T_FeuilleDeTemps", ThisKey="idCategorie", OtherKey="idCategorie")]
	public EntitySet<T_FeuilleDeTemps> T_FeuilleDeTemps
	{
		get
		{
			return this._T_FeuilleDeTemps;
		}
		set
		{
			this._T_FeuilleDeTemps.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CategoriePro_T_Kilometrage", Storage="_T_Kilometrage", ThisKey="idCategorie", OtherKey="idCat")]
	public EntitySet<T_Kilometrage> T_Kilometrage
	{
		get
		{
			return this._T_Kilometrage;
		}
		set
		{
			this._T_Kilometrage.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_CategoriePro", Storage="_T_Projet", ThisKey="idProjet", OtherKey="idProjet", IsForeignKey=true)]
	public T_Projet T_Projet
	{
		get
		{
			return this._T_Projet.Entity;
		}
		set
		{
			T_Projet previousValue = this._T_Projet.Entity;
			if (((previousValue != value) 
						|| (this._T_Projet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Projet.Entity = null;
					previousValue.T_CategoriePro.Remove(this);
				}
				this._T_Projet.Entity = value;
				if ((value != null))
				{
					value.T_CategoriePro.Add(this);
					this._idProjet = value.idProjet;
				}
				else
				{
					this._idProjet = default(int);
				}
				this.SendPropertyChanged("T_Projet");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_StatusCategorie_T_CategoriePro", Storage="_T_StatusCategorie", ThisKey="idStatusCat", OtherKey="idStatusCat", IsForeignKey=true)]
	public T_StatusCategorie T_StatusCategorie
	{
		get
		{
			return this._T_StatusCategorie.Entity;
		}
		set
		{
			T_StatusCategorie previousValue = this._T_StatusCategorie.Entity;
			if (((previousValue != value) 
						|| (this._T_StatusCategorie.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_StatusCategorie.Entity = null;
					previousValue.T_CategoriePro.Remove(this);
				}
				this._T_StatusCategorie.Entity = value;
				if ((value != null))
				{
					value.T_CategoriePro.Add(this);
					this._idStatusCat = value.idStatusCat;
				}
				else
				{
					this._idStatusCat = default(int);
				}
				this.SendPropertyChanged("T_StatusCategorie");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_CategoriePro = this;
	}
	
	private void detach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_CategoriePro = null;
	}
	
	private void attach_T_FeuilleDeTemps(T_FeuilleDeTemps entity)
	{
		this.SendPropertyChanging();
		entity.T_CategoriePro = this;
	}
	
	private void detach_T_FeuilleDeTemps(T_FeuilleDeTemps entity)
	{
		this.SendPropertyChanging();
		entity.T_CategoriePro = null;
	}
	
	private void attach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_CategoriePro = this;
	}
	
	private void detach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_CategoriePro = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TypeDepense")]
public partial class T_TypeDepense : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idDepense;
	
	private string _descript;
	
	private EntitySet<T_Depense> _T_Depense;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDepenseChanging(int value);
    partial void OnidDepenseChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    #endregion
	
	public T_TypeDepense()
	{
		this._T_Depense = new EntitySet<T_Depense>(new Action<T_Depense>(this.attach_T_Depense), new Action<T_Depense>(this.detach_T_Depense));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepense", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idDepense
	{
		get
		{
			return this._idDepense;
		}
		set
		{
			if ((this._idDepense != value))
			{
				this.OnidDepenseChanging(value);
				this.SendPropertyChanging();
				this._idDepense = value;
				this.SendPropertyChanged("idDepense");
				this.OnidDepenseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(25)")]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TypeDepense_T_Depense", Storage="_T_Depense", ThisKey="idDepense", OtherKey="idType")]
	public EntitySet<T_Depense> T_Depense
	{
		get
		{
			return this._T_Depense;
		}
		set
		{
			this._T_Depense.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_TypeDepense = this;
	}
	
	private void detach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_TypeDepense = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Depense")]
public partial class T_Depense : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idDepense;
	
	private System.Nullable<decimal> _montant;
	
	private string _descript;
	
	private System.Nullable<bool> _aprobation;
	
	private System.Nullable<System.DateTime> _ddate;
	
	private int _idType;
	
	private int _idProjet;
	
	private System.Nullable<int> _idCategorie;
	
	private int _idEmp;
	
	private EntityRef<T_CategoriePro> _T_CategoriePro;
	
	private EntityRef<T_TypeDepense> _T_TypeDepense;
	
	private EntityRef<T_Projet> _T_Projet;
	
	private EntityRef<T_Employe> _T_Employe;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidDepenseChanging(int value);
    partial void OnidDepenseChanged();
    partial void OnmontantChanging(System.Nullable<decimal> value);
    partial void OnmontantChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    partial void OnaprobationChanging(System.Nullable<bool> value);
    partial void OnaprobationChanged();
    partial void OnddateChanging(System.Nullable<System.DateTime> value);
    partial void OnddateChanged();
    partial void OnidTypeChanging(int value);
    partial void OnidTypeChanged();
    partial void OnidProjetChanging(int value);
    partial void OnidProjetChanged();
    partial void OnidCategorieChanging(System.Nullable<int> value);
    partial void OnidCategorieChanged();
    partial void OnidEmpChanging(int value);
    partial void OnidEmpChanged();
    #endregion
	
	public T_Depense()
	{
		this._T_CategoriePro = default(EntityRef<T_CategoriePro>);
		this._T_TypeDepense = default(EntityRef<T_TypeDepense>);
		this._T_Projet = default(EntityRef<T_Projet>);
		this._T_Employe = default(EntityRef<T_Employe>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idDepense", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idDepense
	{
		get
		{
			return this._idDepense;
		}
		set
		{
			if ((this._idDepense != value))
			{
				this.OnidDepenseChanging(value);
				this.SendPropertyChanging();
				this._idDepense = value;
				this.SendPropertyChanged("idDepense");
				this.OnidDepenseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_montant", DbType="SmallMoney")]
	public System.Nullable<decimal> montant
	{
		get
		{
			return this._montant;
		}
		set
		{
			if ((this._montant != value))
			{
				this.OnmontantChanging(value);
				this.SendPropertyChanging();
				this._montant = value;
				this.SendPropertyChanged("montant");
				this.OnmontantChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(50)")]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aprobation", DbType="Bit")]
	public System.Nullable<bool> aprobation
	{
		get
		{
			return this._aprobation;
		}
		set
		{
			if ((this._aprobation != value))
			{
				this.OnaprobationChanging(value);
				this.SendPropertyChanging();
				this._aprobation = value;
				this.SendPropertyChanged("aprobation");
				this.OnaprobationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ddate", DbType="Date")]
	public System.Nullable<System.DateTime> ddate
	{
		get
		{
			return this._ddate;
		}
		set
		{
			if ((this._ddate != value))
			{
				this.OnddateChanging(value);
				this.SendPropertyChanging();
				this._ddate = value;
				this.SendPropertyChanged("ddate");
				this.OnddateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idType", DbType="Int NOT NULL")]
	public int idType
	{
		get
		{
			return this._idType;
		}
		set
		{
			if ((this._idType != value))
			{
				if (this._T_TypeDepense.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidTypeChanging(value);
				this.SendPropertyChanging();
				this._idType = value;
				this.SendPropertyChanged("idType");
				this.OnidTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProjet", DbType="Int NOT NULL")]
	public int idProjet
	{
		get
		{
			return this._idProjet;
		}
		set
		{
			if ((this._idProjet != value))
			{
				if (this._T_Projet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidProjetChanging(value);
				this.SendPropertyChanging();
				this._idProjet = value;
				this.SendPropertyChanged("idProjet");
				this.OnidProjetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategorie", DbType="Int")]
	public System.Nullable<int> idCategorie
	{
		get
		{
			return this._idCategorie;
		}
		set
		{
			if ((this._idCategorie != value))
			{
				if (this._T_CategoriePro.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidCategorieChanging(value);
				this.SendPropertyChanging();
				this._idCategorie = value;
				this.SendPropertyChanged("idCategorie");
				this.OnidCategorieChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmp", DbType="Int NOT NULL")]
	public int idEmp
	{
		get
		{
			return this._idEmp;
		}
		set
		{
			if ((this._idEmp != value))
			{
				if (this._T_Employe.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidEmpChanging(value);
				this.SendPropertyChanging();
				this._idEmp = value;
				this.SendPropertyChanged("idEmp");
				this.OnidEmpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CategoriePro_T_Depense", Storage="_T_CategoriePro", ThisKey="idCategorie", OtherKey="idCategorie", IsForeignKey=true)]
	public T_CategoriePro T_CategoriePro
	{
		get
		{
			return this._T_CategoriePro.Entity;
		}
		set
		{
			T_CategoriePro previousValue = this._T_CategoriePro.Entity;
			if (((previousValue != value) 
						|| (this._T_CategoriePro.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_CategoriePro.Entity = null;
					previousValue.T_Depense.Remove(this);
				}
				this._T_CategoriePro.Entity = value;
				if ((value != null))
				{
					value.T_Depense.Add(this);
					this._idCategorie = value.idCategorie;
				}
				else
				{
					this._idCategorie = default(Nullable<int>);
				}
				this.SendPropertyChanged("T_CategoriePro");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TypeDepense_T_Depense", Storage="_T_TypeDepense", ThisKey="idType", OtherKey="idDepense", IsForeignKey=true)]
	public T_TypeDepense T_TypeDepense
	{
		get
		{
			return this._T_TypeDepense.Entity;
		}
		set
		{
			T_TypeDepense previousValue = this._T_TypeDepense.Entity;
			if (((previousValue != value) 
						|| (this._T_TypeDepense.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_TypeDepense.Entity = null;
					previousValue.T_Depense.Remove(this);
				}
				this._T_TypeDepense.Entity = value;
				if ((value != null))
				{
					value.T_Depense.Add(this);
					this._idType = value.idDepense;
				}
				else
				{
					this._idType = default(int);
				}
				this.SendPropertyChanged("T_TypeDepense");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_Depense", Storage="_T_Projet", ThisKey="idProjet", OtherKey="idProjet", IsForeignKey=true)]
	public T_Projet T_Projet
	{
		get
		{
			return this._T_Projet.Entity;
		}
		set
		{
			T_Projet previousValue = this._T_Projet.Entity;
			if (((previousValue != value) 
						|| (this._T_Projet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Projet.Entity = null;
					previousValue.T_Depense.Remove(this);
				}
				this._T_Projet.Entity = value;
				if ((value != null))
				{
					value.T_Depense.Add(this);
					this._idProjet = value.idProjet;
				}
				else
				{
					this._idProjet = default(int);
				}
				this.SendPropertyChanged("T_Projet");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_Depense", Storage="_T_Employe", ThisKey="idEmp", OtherKey="idEmploye", IsForeignKey=true)]
	public T_Employe T_Employe
	{
		get
		{
			return this._T_Employe.Entity;
		}
		set
		{
			T_Employe previousValue = this._T_Employe.Entity;
			if (((previousValue != value) 
						|| (this._T_Employe.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Employe.Entity = null;
					previousValue.T_Depense.Remove(this);
				}
				this._T_Employe.Entity = value;
				if ((value != null))
				{
					value.T_Depense.Add(this);
					this._idEmp = value.idEmploye;
				}
				else
				{
					this._idEmp = default(int);
				}
				this.SendPropertyChanged("T_Employe");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_EmployeProjet")]
public partial class T_EmployeProjet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idEmpPro;
	
	private int _idEmp;
	
	private int _idPro;
	
	private EntityRef<T_Projet> _T_Projet;
	
	private EntityRef<T_Employe> _T_Employe;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmpProChanging(int value);
    partial void OnidEmpProChanged();
    partial void OnidEmpChanging(int value);
    partial void OnidEmpChanged();
    partial void OnidProChanging(int value);
    partial void OnidProChanged();
    #endregion
	
	public T_EmployeProjet()
	{
		this._T_Projet = default(EntityRef<T_Projet>);
		this._T_Employe = default(EntityRef<T_Employe>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmpPro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idEmpPro
	{
		get
		{
			return this._idEmpPro;
		}
		set
		{
			if ((this._idEmpPro != value))
			{
				this.OnidEmpProChanging(value);
				this.SendPropertyChanging();
				this._idEmpPro = value;
				this.SendPropertyChanged("idEmpPro");
				this.OnidEmpProChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmp", DbType="Int NOT NULL")]
	public int idEmp
	{
		get
		{
			return this._idEmp;
		}
		set
		{
			if ((this._idEmp != value))
			{
				if (this._T_Employe.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidEmpChanging(value);
				this.SendPropertyChanging();
				this._idEmp = value;
				this.SendPropertyChanged("idEmp");
				this.OnidEmpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPro", DbType="Int NOT NULL")]
	public int idPro
	{
		get
		{
			return this._idPro;
		}
		set
		{
			if ((this._idPro != value))
			{
				if (this._T_Projet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidProChanging(value);
				this.SendPropertyChanging();
				this._idPro = value;
				this.SendPropertyChanged("idPro");
				this.OnidProChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_EmployeProjet", Storage="_T_Projet", ThisKey="idPro", OtherKey="idProjet", IsForeignKey=true)]
	public T_Projet T_Projet
	{
		get
		{
			return this._T_Projet.Entity;
		}
		set
		{
			T_Projet previousValue = this._T_Projet.Entity;
			if (((previousValue != value) 
						|| (this._T_Projet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Projet.Entity = null;
					previousValue.T_EmployeProjet.Remove(this);
				}
				this._T_Projet.Entity = value;
				if ((value != null))
				{
					value.T_EmployeProjet.Add(this);
					this._idPro = value.idProjet;
				}
				else
				{
					this._idPro = default(int);
				}
				this.SendPropertyChanged("T_Projet");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_EmployeProjet", Storage="_T_Employe", ThisKey="idEmp", OtherKey="idEmploye", IsForeignKey=true)]
	public T_Employe T_Employe
	{
		get
		{
			return this._T_Employe.Entity;
		}
		set
		{
			T_Employe previousValue = this._T_Employe.Entity;
			if (((previousValue != value) 
						|| (this._T_Employe.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Employe.Entity = null;
					previousValue.T_EmployeProjet.Remove(this);
				}
				this._T_Employe.Entity = value;
				if ((value != null))
				{
					value.T_EmployeProjet.Add(this);
					this._idEmp = value.idEmploye;
				}
				else
				{
					this._idEmp = default(int);
				}
				this.SendPropertyChanged("T_Employe");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_FeuilleDeTemps")]
public partial class T_FeuilleDeTemps : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idFeuilleDeTemps;
	
	private System.Nullable<System.DateTime> _semaine;
	
	private System.Nullable<float> _dimanche;
	
	private System.Nullable<float> _lundi;
	
	private System.Nullable<float> _mardi;
	
	private System.Nullable<float> _mercredi;
	
	private System.Nullable<float> _jeudi;
	
	private System.Nullable<float> _vendredi;
	
	private System.Nullable<float> _samedi;
	
	private string _note;
	
	private int _idEmp;
	
	private int _idCategorie;
	
	private EntityRef<T_CategoriePro> _T_CategoriePro;
	
	private EntityRef<T_Employe> _T_Employe;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFeuilleDeTempsChanging(int value);
    partial void OnidFeuilleDeTempsChanged();
    partial void OnsemaineChanging(System.Nullable<System.DateTime> value);
    partial void OnsemaineChanged();
    partial void OndimancheChanging(System.Nullable<float> value);
    partial void OndimancheChanged();
    partial void OnlundiChanging(System.Nullable<float> value);
    partial void OnlundiChanged();
    partial void OnmardiChanging(System.Nullable<float> value);
    partial void OnmardiChanged();
    partial void OnmercrediChanging(System.Nullable<float> value);
    partial void OnmercrediChanged();
    partial void OnjeudiChanging(System.Nullable<float> value);
    partial void OnjeudiChanged();
    partial void OnvendrediChanging(System.Nullable<float> value);
    partial void OnvendrediChanged();
    partial void OnsamediChanging(System.Nullable<float> value);
    partial void OnsamediChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    partial void OnidEmpChanging(int value);
    partial void OnidEmpChanged();
    partial void OnidCategorieChanging(int value);
    partial void OnidCategorieChanged();
    #endregion
	
	public T_FeuilleDeTemps()
	{
		this._T_CategoriePro = default(EntityRef<T_CategoriePro>);
		this._T_Employe = default(EntityRef<T_Employe>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFeuilleDeTemps", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idFeuilleDeTemps
	{
		get
		{
			return this._idFeuilleDeTemps;
		}
		set
		{
			if ((this._idFeuilleDeTemps != value))
			{
				this.OnidFeuilleDeTempsChanging(value);
				this.SendPropertyChanging();
				this._idFeuilleDeTemps = value;
				this.SendPropertyChanged("idFeuilleDeTemps");
				this.OnidFeuilleDeTempsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_semaine", DbType="Date")]
	public System.Nullable<System.DateTime> semaine
	{
		get
		{
			return this._semaine;
		}
		set
		{
			if ((this._semaine != value))
			{
				this.OnsemaineChanging(value);
				this.SendPropertyChanging();
				this._semaine = value;
				this.SendPropertyChanged("semaine");
				this.OnsemaineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dimanche", DbType="Real")]
	public System.Nullable<float> dimanche
	{
		get
		{
			return this._dimanche;
		}
		set
		{
			if ((this._dimanche != value))
			{
				this.OndimancheChanging(value);
				this.SendPropertyChanging();
				this._dimanche = value;
				this.SendPropertyChanged("dimanche");
				this.OndimancheChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lundi", DbType="Real")]
	public System.Nullable<float> lundi
	{
		get
		{
			return this._lundi;
		}
		set
		{
			if ((this._lundi != value))
			{
				this.OnlundiChanging(value);
				this.SendPropertyChanging();
				this._lundi = value;
				this.SendPropertyChanged("lundi");
				this.OnlundiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mardi", DbType="Real")]
	public System.Nullable<float> mardi
	{
		get
		{
			return this._mardi;
		}
		set
		{
			if ((this._mardi != value))
			{
				this.OnmardiChanging(value);
				this.SendPropertyChanging();
				this._mardi = value;
				this.SendPropertyChanged("mardi");
				this.OnmardiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mercredi", DbType="Real")]
	public System.Nullable<float> mercredi
	{
		get
		{
			return this._mercredi;
		}
		set
		{
			if ((this._mercredi != value))
			{
				this.OnmercrediChanging(value);
				this.SendPropertyChanging();
				this._mercredi = value;
				this.SendPropertyChanged("mercredi");
				this.OnmercrediChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jeudi", DbType="Real")]
	public System.Nullable<float> jeudi
	{
		get
		{
			return this._jeudi;
		}
		set
		{
			if ((this._jeudi != value))
			{
				this.OnjeudiChanging(value);
				this.SendPropertyChanging();
				this._jeudi = value;
				this.SendPropertyChanged("jeudi");
				this.OnjeudiChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vendredi", DbType="Real")]
	public System.Nullable<float> vendredi
	{
		get
		{
			return this._vendredi;
		}
		set
		{
			if ((this._vendredi != value))
			{
				this.OnvendrediChanging(value);
				this.SendPropertyChanging();
				this._vendredi = value;
				this.SendPropertyChanged("vendredi");
				this.OnvendrediChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_samedi", DbType="Real")]
	public System.Nullable<float> samedi
	{
		get
		{
			return this._samedi;
		}
		set
		{
			if ((this._samedi != value))
			{
				this.OnsamediChanging(value);
				this.SendPropertyChanging();
				this._samedi = value;
				this.SendPropertyChanged("samedi");
				this.OnsamediChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="VarChar(100)")]
	public string note
	{
		get
		{
			return this._note;
		}
		set
		{
			if ((this._note != value))
			{
				this.OnnoteChanging(value);
				this.SendPropertyChanging();
				this._note = value;
				this.SendPropertyChanged("note");
				this.OnnoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmp", DbType="Int NOT NULL")]
	public int idEmp
	{
		get
		{
			return this._idEmp;
		}
		set
		{
			if ((this._idEmp != value))
			{
				if (this._T_Employe.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidEmpChanging(value);
				this.SendPropertyChanging();
				this._idEmp = value;
				this.SendPropertyChanged("idEmp");
				this.OnidEmpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCategorie", DbType="Int NOT NULL")]
	public int idCategorie
	{
		get
		{
			return this._idCategorie;
		}
		set
		{
			if ((this._idCategorie != value))
			{
				if (this._T_CategoriePro.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidCategorieChanging(value);
				this.SendPropertyChanging();
				this._idCategorie = value;
				this.SendPropertyChanged("idCategorie");
				this.OnidCategorieChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CategoriePro_T_FeuilleDeTemps", Storage="_T_CategoriePro", ThisKey="idCategorie", OtherKey="idCategorie", IsForeignKey=true)]
	public T_CategoriePro T_CategoriePro
	{
		get
		{
			return this._T_CategoriePro.Entity;
		}
		set
		{
			T_CategoriePro previousValue = this._T_CategoriePro.Entity;
			if (((previousValue != value) 
						|| (this._T_CategoriePro.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_CategoriePro.Entity = null;
					previousValue.T_FeuilleDeTemps.Remove(this);
				}
				this._T_CategoriePro.Entity = value;
				if ((value != null))
				{
					value.T_FeuilleDeTemps.Add(this);
					this._idCategorie = value.idCategorie;
				}
				else
				{
					this._idCategorie = default(int);
				}
				this.SendPropertyChanged("T_CategoriePro");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_FeuilleDeTemps", Storage="_T_Employe", ThisKey="idEmp", OtherKey="idEmploye", IsForeignKey=true)]
	public T_Employe T_Employe
	{
		get
		{
			return this._T_Employe.Entity;
		}
		set
		{
			T_Employe previousValue = this._T_Employe.Entity;
			if (((previousValue != value) 
						|| (this._T_Employe.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Employe.Entity = null;
					previousValue.T_FeuilleDeTemps.Remove(this);
				}
				this._T_Employe.Entity = value;
				if ((value != null))
				{
					value.T_FeuilleDeTemps.Add(this);
					this._idEmp = value.idEmploye;
				}
				else
				{
					this._idEmp = default(int);
				}
				this.SendPropertyChanged("T_Employe");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_FonctionEmploye")]
public partial class T_FonctionEmploye : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idFonctionEmp;
	
	private string _descript;
	
	private EntitySet<T_Employe> _T_Employe;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidFonctionEmpChanging(int value);
    partial void OnidFonctionEmpChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    #endregion
	
	public T_FonctionEmploye()
	{
		this._T_Employe = new EntitySet<T_Employe>(new Action<T_Employe>(this.attach_T_Employe), new Action<T_Employe>(this.detach_T_Employe));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFonctionEmp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idFonctionEmp
	{
		get
		{
			return this._idFonctionEmp;
		}
		set
		{
			if ((this._idFonctionEmp != value))
			{
				this.OnidFonctionEmpChanging(value);
				this.SendPropertyChanging();
				this._idFonctionEmp = value;
				this.SendPropertyChanged("idFonctionEmp");
				this.OnidFonctionEmpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(20)")]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_FonctionEmploye_T_Employe", Storage="_T_Employe", ThisKey="idFonctionEmp", OtherKey="idFonction")]
	public EntitySet<T_Employe> T_Employe
	{
		get
		{
			return this._T_Employe;
		}
		set
		{
			this._T_Employe.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_Employe(T_Employe entity)
	{
		this.SendPropertyChanging();
		entity.T_FonctionEmploye = this;
	}
	
	private void detach_T_Employe(T_Employe entity)
	{
		this.SendPropertyChanging();
		entity.T_FonctionEmploye = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Kilometrage")]
public partial class T_Kilometrage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idKilo;
	
	private float _nbKilo;
	
	private string _commentaire;
	
	private System.Nullable<System.DateTime> _ddate;
	
	private int _idTaux;
	
	private int _idEmp;
	
	private int _idPro;
	
	private int _idCat;
	
	private EntityRef<T_CategoriePro> _T_CategoriePro;
	
	private EntityRef<T_Projet> _T_Projet;
	
	private EntityRef<T_TauxKilo> _T_TauxKilo;
	
	private EntityRef<T_Employe> _T_Employe;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidKiloChanging(int value);
    partial void OnidKiloChanged();
    partial void OnnbKiloChanging(float value);
    partial void OnnbKiloChanged();
    partial void OncommentaireChanging(string value);
    partial void OncommentaireChanged();
    partial void OnddateChanging(System.Nullable<System.DateTime> value);
    partial void OnddateChanged();
    partial void OnidTauxChanging(int value);
    partial void OnidTauxChanged();
    partial void OnidEmpChanging(int value);
    partial void OnidEmpChanged();
    partial void OnidProChanging(int value);
    partial void OnidProChanged();
    partial void OnidCatChanging(int value);
    partial void OnidCatChanged();
    #endregion
	
	public T_Kilometrage()
	{
		this._T_CategoriePro = default(EntityRef<T_CategoriePro>);
		this._T_Projet = default(EntityRef<T_Projet>);
		this._T_TauxKilo = default(EntityRef<T_TauxKilo>);
		this._T_Employe = default(EntityRef<T_Employe>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idKilo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idKilo
	{
		get
		{
			return this._idKilo;
		}
		set
		{
			if ((this._idKilo != value))
			{
				this.OnidKiloChanging(value);
				this.SendPropertyChanging();
				this._idKilo = value;
				this.SendPropertyChanged("idKilo");
				this.OnidKiloChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbKilo", DbType="Real NOT NULL")]
	public float nbKilo
	{
		get
		{
			return this._nbKilo;
		}
		set
		{
			if ((this._nbKilo != value))
			{
				this.OnnbKiloChanging(value);
				this.SendPropertyChanging();
				this._nbKilo = value;
				this.SendPropertyChanged("nbKilo");
				this.OnnbKiloChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentaire", DbType="VarChar(100)")]
	public string commentaire
	{
		get
		{
			return this._commentaire;
		}
		set
		{
			if ((this._commentaire != value))
			{
				this.OncommentaireChanging(value);
				this.SendPropertyChanging();
				this._commentaire = value;
				this.SendPropertyChanged("commentaire");
				this.OncommentaireChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ddate", DbType="Date")]
	public System.Nullable<System.DateTime> ddate
	{
		get
		{
			return this._ddate;
		}
		set
		{
			if ((this._ddate != value))
			{
				this.OnddateChanging(value);
				this.SendPropertyChanging();
				this._ddate = value;
				this.SendPropertyChanged("ddate");
				this.OnddateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaux", DbType="Int NOT NULL")]
	public int idTaux
	{
		get
		{
			return this._idTaux;
		}
		set
		{
			if ((this._idTaux != value))
			{
				if (this._T_TauxKilo.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidTauxChanging(value);
				this.SendPropertyChanging();
				this._idTaux = value;
				this.SendPropertyChanged("idTaux");
				this.OnidTauxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmp", DbType="Int NOT NULL")]
	public int idEmp
	{
		get
		{
			return this._idEmp;
		}
		set
		{
			if ((this._idEmp != value))
			{
				if (this._T_Employe.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidEmpChanging(value);
				this.SendPropertyChanging();
				this._idEmp = value;
				this.SendPropertyChanged("idEmp");
				this.OnidEmpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPro", DbType="Int NOT NULL")]
	public int idPro
	{
		get
		{
			return this._idPro;
		}
		set
		{
			if ((this._idPro != value))
			{
				if (this._T_Projet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidProChanging(value);
				this.SendPropertyChanging();
				this._idPro = value;
				this.SendPropertyChanged("idPro");
				this.OnidProChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCat", DbType="Int NOT NULL")]
	public int idCat
	{
		get
		{
			return this._idCat;
		}
		set
		{
			if ((this._idCat != value))
			{
				if (this._T_CategoriePro.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidCatChanging(value);
				this.SendPropertyChanging();
				this._idCat = value;
				this.SendPropertyChanged("idCat");
				this.OnidCatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_CategoriePro_T_Kilometrage", Storage="_T_CategoriePro", ThisKey="idCat", OtherKey="idCategorie", IsForeignKey=true)]
	public T_CategoriePro T_CategoriePro
	{
		get
		{
			return this._T_CategoriePro.Entity;
		}
		set
		{
			T_CategoriePro previousValue = this._T_CategoriePro.Entity;
			if (((previousValue != value) 
						|| (this._T_CategoriePro.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_CategoriePro.Entity = null;
					previousValue.T_Kilometrage.Remove(this);
				}
				this._T_CategoriePro.Entity = value;
				if ((value != null))
				{
					value.T_Kilometrage.Add(this);
					this._idCat = value.idCategorie;
				}
				else
				{
					this._idCat = default(int);
				}
				this.SendPropertyChanged("T_CategoriePro");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_Kilometrage", Storage="_T_Projet", ThisKey="idPro", OtherKey="idProjet", IsForeignKey=true)]
	public T_Projet T_Projet
	{
		get
		{
			return this._T_Projet.Entity;
		}
		set
		{
			T_Projet previousValue = this._T_Projet.Entity;
			if (((previousValue != value) 
						|| (this._T_Projet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Projet.Entity = null;
					previousValue.T_Kilometrage.Remove(this);
				}
				this._T_Projet.Entity = value;
				if ((value != null))
				{
					value.T_Kilometrage.Add(this);
					this._idPro = value.idProjet;
				}
				else
				{
					this._idPro = default(int);
				}
				this.SendPropertyChanged("T_Projet");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TauxKilo_T_Kilometrage", Storage="_T_TauxKilo", ThisKey="idTaux", OtherKey="idTaux", IsForeignKey=true)]
	public T_TauxKilo T_TauxKilo
	{
		get
		{
			return this._T_TauxKilo.Entity;
		}
		set
		{
			T_TauxKilo previousValue = this._T_TauxKilo.Entity;
			if (((previousValue != value) 
						|| (this._T_TauxKilo.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_TauxKilo.Entity = null;
					previousValue.T_Kilometrage.Remove(this);
				}
				this._T_TauxKilo.Entity = value;
				if ((value != null))
				{
					value.T_Kilometrage.Add(this);
					this._idTaux = value.idTaux;
				}
				else
				{
					this._idTaux = default(int);
				}
				this.SendPropertyChanged("T_TauxKilo");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_Kilometrage", Storage="_T_Employe", ThisKey="idEmp", OtherKey="idEmploye", IsForeignKey=true)]
	public T_Employe T_Employe
	{
		get
		{
			return this._T_Employe.Entity;
		}
		set
		{
			T_Employe previousValue = this._T_Employe.Entity;
			if (((previousValue != value) 
						|| (this._T_Employe.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_Employe.Entity = null;
					previousValue.T_Kilometrage.Remove(this);
				}
				this._T_Employe.Entity = value;
				if ((value != null))
				{
					value.T_Kilometrage.Add(this);
					this._idEmp = value.idEmploye;
				}
				else
				{
					this._idEmp = default(int);
				}
				this.SendPropertyChanged("T_Employe");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Projet")]
public partial class T_Projet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idProjet;
	
	private string _nom;
	
	private string _descript;
	
	private System.Nullable<int> _responsable;
	
	private System.Nullable<System.DateTime> _dateDebut;
	
	private System.Nullable<System.DateTime> _dateFin;
	
	private System.Nullable<double> _heureAlloue;
	
	private int _idStatus;
	
	private EntitySet<T_CategoriePro> _T_CategoriePro;
	
	private EntitySet<T_Depense> _T_Depense;
	
	private EntitySet<T_EmployeProjet> _T_EmployeProjet;
	
	private EntitySet<T_Kilometrage> _T_Kilometrage;
	
	private EntityRef<T_StatusProjet> _T_StatusProjet;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidProjetChanging(int value);
    partial void OnidProjetChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    partial void OnresponsableChanging(System.Nullable<int> value);
    partial void OnresponsableChanged();
    partial void OndateDebutChanging(System.Nullable<System.DateTime> value);
    partial void OndateDebutChanged();
    partial void OndateFinChanging(System.Nullable<System.DateTime> value);
    partial void OndateFinChanged();
    partial void OnheureAlloueChanging(System.Nullable<double> value);
    partial void OnheureAlloueChanged();
    partial void OnidStatusChanging(int value);
    partial void OnidStatusChanged();
    #endregion
	
	public T_Projet()
	{
		this._T_CategoriePro = new EntitySet<T_CategoriePro>(new Action<T_CategoriePro>(this.attach_T_CategoriePro), new Action<T_CategoriePro>(this.detach_T_CategoriePro));
		this._T_Depense = new EntitySet<T_Depense>(new Action<T_Depense>(this.attach_T_Depense), new Action<T_Depense>(this.detach_T_Depense));
		this._T_EmployeProjet = new EntitySet<T_EmployeProjet>(new Action<T_EmployeProjet>(this.attach_T_EmployeProjet), new Action<T_EmployeProjet>(this.detach_T_EmployeProjet));
		this._T_Kilometrage = new EntitySet<T_Kilometrage>(new Action<T_Kilometrage>(this.attach_T_Kilometrage), new Action<T_Kilometrage>(this.detach_T_Kilometrage));
		this._T_StatusProjet = default(EntityRef<T_StatusProjet>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProjet", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int idProjet
	{
		get
		{
			return this._idProjet;
		}
		set
		{
			if ((this._idProjet != value))
			{
				this.OnidProjetChanging(value);
				this.SendPropertyChanging();
				this._idProjet = value;
				this.SendPropertyChanged("idProjet");
				this.OnidProjetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string nom
	{
		get
		{
			return this._nom;
		}
		set
		{
			if ((this._nom != value))
			{
				this.OnnomChanging(value);
				this.SendPropertyChanging();
				this._nom = value;
				this.SendPropertyChanged("nom");
				this.OnnomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(500)")]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_responsable", DbType="Int")]
	public System.Nullable<int> responsable
	{
		get
		{
			return this._responsable;
		}
		set
		{
			if ((this._responsable != value))
			{
				this.OnresponsableChanging(value);
				this.SendPropertyChanging();
				this._responsable = value;
				this.SendPropertyChanged("responsable");
				this.OnresponsableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDebut", DbType="Date")]
	public System.Nullable<System.DateTime> dateDebut
	{
		get
		{
			return this._dateDebut;
		}
		set
		{
			if ((this._dateDebut != value))
			{
				this.OndateDebutChanging(value);
				this.SendPropertyChanging();
				this._dateDebut = value;
				this.SendPropertyChanged("dateDebut");
				this.OndateDebutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateFin", DbType="Date")]
	public System.Nullable<System.DateTime> dateFin
	{
		get
		{
			return this._dateFin;
		}
		set
		{
			if ((this._dateFin != value))
			{
				this.OndateFinChanging(value);
				this.SendPropertyChanging();
				this._dateFin = value;
				this.SendPropertyChanged("dateFin");
				this.OndateFinChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heureAlloue", DbType="Float")]
	public System.Nullable<double> heureAlloue
	{
		get
		{
			return this._heureAlloue;
		}
		set
		{
			if ((this._heureAlloue != value))
			{
				this.OnheureAlloueChanging(value);
				this.SendPropertyChanging();
				this._heureAlloue = value;
				this.SendPropertyChanged("heureAlloue");
				this.OnheureAlloueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStatus", DbType="Int NOT NULL")]
	public int idStatus
	{
		get
		{
			return this._idStatus;
		}
		set
		{
			if ((this._idStatus != value))
			{
				if (this._T_StatusProjet.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidStatusChanging(value);
				this.SendPropertyChanging();
				this._idStatus = value;
				this.SendPropertyChanged("idStatus");
				this.OnidStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_CategoriePro", Storage="_T_CategoriePro", ThisKey="idProjet", OtherKey="idProjet")]
	public EntitySet<T_CategoriePro> T_CategoriePro
	{
		get
		{
			return this._T_CategoriePro;
		}
		set
		{
			this._T_CategoriePro.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_Depense", Storage="_T_Depense", ThisKey="idProjet", OtherKey="idProjet")]
	public EntitySet<T_Depense> T_Depense
	{
		get
		{
			return this._T_Depense;
		}
		set
		{
			this._T_Depense.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_EmployeProjet", Storage="_T_EmployeProjet", ThisKey="idProjet", OtherKey="idPro")]
	public EntitySet<T_EmployeProjet> T_EmployeProjet
	{
		get
		{
			return this._T_EmployeProjet;
		}
		set
		{
			this._T_EmployeProjet.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Projet_T_Kilometrage", Storage="_T_Kilometrage", ThisKey="idProjet", OtherKey="idPro")]
	public EntitySet<T_Kilometrage> T_Kilometrage
	{
		get
		{
			return this._T_Kilometrage;
		}
		set
		{
			this._T_Kilometrage.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_StatusProjet_T_Projet", Storage="_T_StatusProjet", ThisKey="idStatus", OtherKey="noStatusPro", IsForeignKey=true)]
	public T_StatusProjet T_StatusProjet
	{
		get
		{
			return this._T_StatusProjet.Entity;
		}
		set
		{
			T_StatusProjet previousValue = this._T_StatusProjet.Entity;
			if (((previousValue != value) 
						|| (this._T_StatusProjet.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_StatusProjet.Entity = null;
					previousValue.T_Projet.Remove(this);
				}
				this._T_StatusProjet.Entity = value;
				if ((value != null))
				{
					value.T_Projet.Add(this);
					this._idStatus = value.noStatusPro;
				}
				else
				{
					this._idStatus = default(int);
				}
				this.SendPropertyChanged("T_StatusProjet");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_CategoriePro(T_CategoriePro entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = this;
	}
	
	private void detach_T_CategoriePro(T_CategoriePro entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = null;
	}
	
	private void attach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = this;
	}
	
	private void detach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = null;
	}
	
	private void attach_T_EmployeProjet(T_EmployeProjet entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = this;
	}
	
	private void detach_T_EmployeProjet(T_EmployeProjet entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = null;
	}
	
	private void attach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = this;
	}
	
	private void detach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_Projet = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_StatusCategorie")]
public partial class T_StatusCategorie : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idStatusCat;
	
	private string _descript;
	
	private EntitySet<T_CategoriePro> _T_CategoriePro;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidStatusCatChanging(int value);
    partial void OnidStatusCatChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    #endregion
	
	public T_StatusCategorie()
	{
		this._T_CategoriePro = new EntitySet<T_CategoriePro>(new Action<T_CategoriePro>(this.attach_T_CategoriePro), new Action<T_CategoriePro>(this.detach_T_CategoriePro));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStatusCat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idStatusCat
	{
		get
		{
			return this._idStatusCat;
		}
		set
		{
			if ((this._idStatusCat != value))
			{
				this.OnidStatusCatChanging(value);
				this.SendPropertyChanging();
				this._idStatusCat = value;
				this.SendPropertyChanged("idStatusCat");
				this.OnidStatusCatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_StatusCategorie_T_CategoriePro", Storage="_T_CategoriePro", ThisKey="idStatusCat", OtherKey="idStatusCat")]
	public EntitySet<T_CategoriePro> T_CategoriePro
	{
		get
		{
			return this._T_CategoriePro;
		}
		set
		{
			this._T_CategoriePro.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_CategoriePro(T_CategoriePro entity)
	{
		this.SendPropertyChanging();
		entity.T_StatusCategorie = this;
	}
	
	private void detach_T_CategoriePro(T_CategoriePro entity)
	{
		this.SendPropertyChanging();
		entity.T_StatusCategorie = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_StatusEmploye")]
public partial class T_StatusEmploye : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idStatusEmp;
	
	private string _descript;
	
	private EntitySet<T_Employe> _T_Employe;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidStatusEmpChanging(int value);
    partial void OnidStatusEmpChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    #endregion
	
	public T_StatusEmploye()
	{
		this._T_Employe = new EntitySet<T_Employe>(new Action<T_Employe>(this.attach_T_Employe), new Action<T_Employe>(this.detach_T_Employe));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStatusEmp", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idStatusEmp
	{
		get
		{
			return this._idStatusEmp;
		}
		set
		{
			if ((this._idStatusEmp != value))
			{
				this.OnidStatusEmpChanging(value);
				this.SendPropertyChanging();
				this._idStatusEmp = value;
				this.SendPropertyChanged("idStatusEmp");
				this.OnidStatusEmpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_StatusEmploye_T_Employe", Storage="_T_Employe", ThisKey="idStatusEmp", OtherKey="idStatus")]
	public EntitySet<T_Employe> T_Employe
	{
		get
		{
			return this._T_Employe;
		}
		set
		{
			this._T_Employe.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_Employe(T_Employe entity)
	{
		this.SendPropertyChanging();
		entity.T_StatusEmploye = this;
	}
	
	private void detach_T_Employe(T_Employe entity)
	{
		this.SendPropertyChanging();
		entity.T_StatusEmploye = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_StatusProjet")]
public partial class T_StatusProjet : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _noStatusPro;
	
	private string _descript;
	
	private EntitySet<T_Projet> _T_Projet;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnoStatusProChanging(int value);
    partial void OnnoStatusProChanged();
    partial void OndescriptChanging(string value);
    partial void OndescriptChanged();
    #endregion
	
	public T_StatusProjet()
	{
		this._T_Projet = new EntitySet<T_Projet>(new Action<T_Projet>(this.attach_T_Projet), new Action<T_Projet>(this.detach_T_Projet));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noStatusPro", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int noStatusPro
	{
		get
		{
			return this._noStatusPro;
		}
		set
		{
			if ((this._noStatusPro != value))
			{
				this.OnnoStatusProChanging(value);
				this.SendPropertyChanging();
				this._noStatusPro = value;
				this.SendPropertyChanged("noStatusPro");
				this.OnnoStatusProChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descript", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string descript
	{
		get
		{
			return this._descript;
		}
		set
		{
			if ((this._descript != value))
			{
				this.OndescriptChanging(value);
				this.SendPropertyChanging();
				this._descript = value;
				this.SendPropertyChanged("descript");
				this.OndescriptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_StatusProjet_T_Projet", Storage="_T_Projet", ThisKey="noStatusPro", OtherKey="idStatus")]
	public EntitySet<T_Projet> T_Projet
	{
		get
		{
			return this._T_Projet;
		}
		set
		{
			this._T_Projet.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_Projet(T_Projet entity)
	{
		this.SendPropertyChanging();
		entity.T_StatusProjet = this;
	}
	
	private void detach_T_Projet(T_Projet entity)
	{
		this.SendPropertyChanging();
		entity.T_StatusProjet = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_TauxKilo")]
public partial class T_TauxKilo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idTaux;
	
	private float _taux;
	
	private System.Nullable<System.DateTime> _ddate;
	
	private EntitySet<T_Kilometrage> _T_Kilometrage;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTauxChanging(int value);
    partial void OnidTauxChanged();
    partial void OntauxChanging(float value);
    partial void OntauxChanged();
    partial void OnddateChanging(System.Nullable<System.DateTime> value);
    partial void OnddateChanged();
    #endregion
	
	public T_TauxKilo()
	{
		this._T_Kilometrage = new EntitySet<T_Kilometrage>(new Action<T_Kilometrage>(this.attach_T_Kilometrage), new Action<T_Kilometrage>(this.detach_T_Kilometrage));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTaux", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idTaux
	{
		get
		{
			return this._idTaux;
		}
		set
		{
			if ((this._idTaux != value))
			{
				this.OnidTauxChanging(value);
				this.SendPropertyChanging();
				this._idTaux = value;
				this.SendPropertyChanged("idTaux");
				this.OnidTauxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taux", DbType="Real NOT NULL")]
	public float taux
	{
		get
		{
			return this._taux;
		}
		set
		{
			if ((this._taux != value))
			{
				this.OntauxChanging(value);
				this.SendPropertyChanging();
				this._taux = value;
				this.SendPropertyChanged("taux");
				this.OntauxChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ddate", DbType="Date")]
	public System.Nullable<System.DateTime> ddate
	{
		get
		{
			return this._ddate;
		}
		set
		{
			if ((this._ddate != value))
			{
				this.OnddateChanging(value);
				this.SendPropertyChanging();
				this._ddate = value;
				this.SendPropertyChanged("ddate");
				this.OnddateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_TauxKilo_T_Kilometrage", Storage="_T_Kilometrage", ThisKey="idTaux", OtherKey="idTaux")]
	public EntitySet<T_Kilometrage> T_Kilometrage
	{
		get
		{
			return this._T_Kilometrage;
		}
		set
		{
			this._T_Kilometrage.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_TauxKilo = this;
	}
	
	private void detach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_TauxKilo = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Employe")]
public partial class T_Employe : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _idEmploye;
	
	private string _nom;
	
	private string _prenom;
	
	private string _courriel;
	
	private string _loginName;
	
	private string _mdp;
	
	private int _idStatus;
	
	private int _idFonction;
	
	private EntitySet<T_Depense> _T_Depense;
	
	private EntitySet<T_EmployeProjet> _T_EmployeProjet;
	
	private EntitySet<T_FeuilleDeTemps> _T_FeuilleDeTemps;
	
	private EntitySet<T_Kilometrage> _T_Kilometrage;
	
	private EntityRef<T_StatusEmploye> _T_StatusEmploye;
	
	private EntityRef<T_FonctionEmploye> _T_FonctionEmploye;
	
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmployeChanging(int value);
    partial void OnidEmployeChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OncourrielChanging(string value);
    partial void OncourrielChanged();
    partial void OnloginNameChanging(string value);
    partial void OnloginNameChanged();
    partial void OnmdpChanging(string value);
    partial void OnmdpChanged();
    partial void OnidStatusChanging(int value);
    partial void OnidStatusChanged();
    partial void OnidFonctionChanging(int value);
    partial void OnidFonctionChanged();
    #endregion
	
	public T_Employe()
	{
		this._T_Depense = new EntitySet<T_Depense>(new Action<T_Depense>(this.attach_T_Depense), new Action<T_Depense>(this.detach_T_Depense));
		this._T_EmployeProjet = new EntitySet<T_EmployeProjet>(new Action<T_EmployeProjet>(this.attach_T_EmployeProjet), new Action<T_EmployeProjet>(this.detach_T_EmployeProjet));
		this._T_FeuilleDeTemps = new EntitySet<T_FeuilleDeTemps>(new Action<T_FeuilleDeTemps>(this.attach_T_FeuilleDeTemps), new Action<T_FeuilleDeTemps>(this.detach_T_FeuilleDeTemps));
		this._T_Kilometrage = new EntitySet<T_Kilometrage>(new Action<T_Kilometrage>(this.attach_T_Kilometrage), new Action<T_Kilometrage>(this.detach_T_Kilometrage));
		this._T_StatusEmploye = default(EntityRef<T_StatusEmploye>);
		this._T_FonctionEmploye = default(EntityRef<T_FonctionEmploye>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmploye", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int idEmploye
	{
		get
		{
			return this._idEmploye;
		}
		set
		{
			if ((this._idEmploye != value))
			{
				this.OnidEmployeChanging(value);
				this.SendPropertyChanging();
				this._idEmploye = value;
				this.SendPropertyChanged("idEmploye");
				this.OnidEmployeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string nom
	{
		get
		{
			return this._nom;
		}
		set
		{
			if ((this._nom != value))
			{
				this.OnnomChanging(value);
				this.SendPropertyChanging();
				this._nom = value;
				this.SendPropertyChanged("nom");
				this.OnnomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string prenom
	{
		get
		{
			return this._prenom;
		}
		set
		{
			if ((this._prenom != value))
			{
				this.OnprenomChanging(value);
				this.SendPropertyChanging();
				this._prenom = value;
				this.SendPropertyChanged("prenom");
				this.OnprenomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_courriel", DbType="VarChar(50)")]
	public string courriel
	{
		get
		{
			return this._courriel;
		}
		set
		{
			if ((this._courriel != value))
			{
				this.OncourrielChanging(value);
				this.SendPropertyChanging();
				this._courriel = value;
				this.SendPropertyChanged("courriel");
				this.OncourrielChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginName", DbType="VarChar(30)")]
	public string loginName
	{
		get
		{
			return this._loginName;
		}
		set
		{
			if ((this._loginName != value))
			{
				this.OnloginNameChanging(value);
				this.SendPropertyChanging();
				this._loginName = value;
				this.SendPropertyChanged("loginName");
				this.OnloginNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mdp", DbType="VarChar(30)")]
	public string mdp
	{
		get
		{
			return this._mdp;
		}
		set
		{
			if ((this._mdp != value))
			{
				this.OnmdpChanging(value);
				this.SendPropertyChanging();
				this._mdp = value;
				this.SendPropertyChanged("mdp");
				this.OnmdpChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idStatus", DbType="Int NOT NULL")]
	public int idStatus
	{
		get
		{
			return this._idStatus;
		}
		set
		{
			if ((this._idStatus != value))
			{
				if (this._T_StatusEmploye.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidStatusChanging(value);
				this.SendPropertyChanging();
				this._idStatus = value;
				this.SendPropertyChanged("idStatus");
				this.OnidStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFonction", DbType="Int NOT NULL")]
	public int idFonction
	{
		get
		{
			return this._idFonction;
		}
		set
		{
			if ((this._idFonction != value))
			{
				if (this._T_FonctionEmploye.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnidFonctionChanging(value);
				this.SendPropertyChanging();
				this._idFonction = value;
				this.SendPropertyChanged("idFonction");
				this.OnidFonctionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_Depense", Storage="_T_Depense", ThisKey="idEmploye", OtherKey="idEmp")]
	public EntitySet<T_Depense> T_Depense
	{
		get
		{
			return this._T_Depense;
		}
		set
		{
			this._T_Depense.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_EmployeProjet", Storage="_T_EmployeProjet", ThisKey="idEmploye", OtherKey="idEmp")]
	public EntitySet<T_EmployeProjet> T_EmployeProjet
	{
		get
		{
			return this._T_EmployeProjet;
		}
		set
		{
			this._T_EmployeProjet.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_FeuilleDeTemps", Storage="_T_FeuilleDeTemps", ThisKey="idEmploye", OtherKey="idEmp")]
	public EntitySet<T_FeuilleDeTemps> T_FeuilleDeTemps
	{
		get
		{
			return this._T_FeuilleDeTemps;
		}
		set
		{
			this._T_FeuilleDeTemps.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_Employe_T_Kilometrage", Storage="_T_Kilometrage", ThisKey="idEmploye", OtherKey="idEmp")]
	public EntitySet<T_Kilometrage> T_Kilometrage
	{
		get
		{
			return this._T_Kilometrage;
		}
		set
		{
			this._T_Kilometrage.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_StatusEmploye_T_Employe", Storage="_T_StatusEmploye", ThisKey="idStatus", OtherKey="idStatusEmp", IsForeignKey=true)]
	public T_StatusEmploye T_StatusEmploye
	{
		get
		{
			return this._T_StatusEmploye.Entity;
		}
		set
		{
			T_StatusEmploye previousValue = this._T_StatusEmploye.Entity;
			if (((previousValue != value) 
						|| (this._T_StatusEmploye.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_StatusEmploye.Entity = null;
					previousValue.T_Employe.Remove(this);
				}
				this._T_StatusEmploye.Entity = value;
				if ((value != null))
				{
					value.T_Employe.Add(this);
					this._idStatus = value.idStatusEmp;
				}
				else
				{
					this._idStatus = default(int);
				}
				this.SendPropertyChanged("T_StatusEmploye");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_FonctionEmploye_T_Employe", Storage="_T_FonctionEmploye", ThisKey="idFonction", OtherKey="idFonctionEmp", IsForeignKey=true)]
	public T_FonctionEmploye T_FonctionEmploye
	{
		get
		{
			return this._T_FonctionEmploye.Entity;
		}
		set
		{
			T_FonctionEmploye previousValue = this._T_FonctionEmploye.Entity;
			if (((previousValue != value) 
						|| (this._T_FonctionEmploye.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._T_FonctionEmploye.Entity = null;
					previousValue.T_Employe.Remove(this);
				}
				this._T_FonctionEmploye.Entity = value;
				if ((value != null))
				{
					value.T_Employe.Add(this);
					this._idFonction = value.idFonctionEmp;
				}
				else
				{
					this._idFonction = default(int);
				}
				this.SendPropertyChanged("T_FonctionEmploye");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = this;
	}
	
	private void detach_T_Depense(T_Depense entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = null;
	}
	
	private void attach_T_EmployeProjet(T_EmployeProjet entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = this;
	}
	
	private void detach_T_EmployeProjet(T_EmployeProjet entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = null;
	}
	
	private void attach_T_FeuilleDeTemps(T_FeuilleDeTemps entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = this;
	}
	
	private void detach_T_FeuilleDeTemps(T_FeuilleDeTemps entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = null;
	}
	
	private void attach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = this;
	}
	
	private void detach_T_Kilometrage(T_Kilometrage entity)
	{
		this.SendPropertyChanging();
		entity.T_Employe = null;
	}
}
#pragma warning restore 1591
